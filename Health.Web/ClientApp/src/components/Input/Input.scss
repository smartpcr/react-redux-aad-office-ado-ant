@import '../../assets/sass/variables';

$_bg: (
  default: rgba(#4a505c, 0.08),
  hover: rgba(#4a505c, 0.08),
  focus: #fff,
  disabled: rgba(#ccc, 0.1)
);

$_border: (
  default: rgba(#4a505c, 0.08),
  hover: rgba(#4a505c, 0.08),
  focus: rgba(#4a505c, 0.08),
  disabled: rgba(#ccc, 0.5)
);

$_color: (
  default: #4a505c,
  hover: #4a505c,
  focus: #4a505c,
  disabled: #bdbdbd
);

$_module-rem: $module-rem;
$_placeholder-color: #4a505c;
$_border-style: solid;
$_border-width: 1px;
$_fs: 1rem;
$_lh: $_module-rem * 2 / $_fs;
$_padding-h: $_module-rem * 2;
$_padding-v: $_module-rem;
$_shape: 20px;
$_animation: $animation;
$_shadow-hover: none;

// size sm
$_fs-sm: ($_fs * 0.9);
$_lh-sm: $_module-rem * 2 / $_fs-sm;
$_shape-sm: ($_shape * 0.8);
$_padding-v-sm: ($_module-rem / 2);

// size lg
$_fs-lg: ($_fs * 1.3);
$_lh-lg: $_module-rem * 2 / $_fs-lg;
$_shape-lg: ($_shape * 1.5);
$_padding-v-lg: $_module-rem * 1.5;

@-webkit-keyframes autofill {
  to {
    color: #666;
    background: transparent;
  }
}

input:-webkit-autofill {
  -webkit-animation-name: autofill;
  -webkit-animation-fill-mode: both;
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

.tc-input {
  border-radius: $_shape;
  color: map-get($_color, default);
  display: block;
  font-size: $_fs;
  line-height: $_lh;
  outline: none;
  width: 100%;

  .tc-input-wrap {
    align-items: center;
    background-color: map-get($_bg, default);
    background-clip: padding-box;
    border: $_border-width $_border-style map-get($_border, default);
    border-radius: inherit;
    cursor: text;
    display: flex;
    outline: none;
    padding: 0 $_padding-h;
    position: relative;
    transition: background-color 0.2s $_animation, border 0.2s $_animation,
      box-shadow 0.2s $_animation, color 0.2s $_animation;
    will-change: background-color, border, box-shadow, color;
    width: 100%;

    .input-infix {
      flex: auto;
      min-width: 5px;
    }

    .input-control {
      background: none;
      border: 0;
      border-radius: inherit;
      box-shadow: none;
      color: inherit;
      cursor: inherit;
      display: block;
      font: inherit;
      font-weight: 400;
      margin: -$_border-width 0;
      outline: none;
      padding: $_padding-v 0.2em;
      width: 100%;

      @include placeholder {
        color: currentColor;
        font-weight: normal;
        opacity: 0.4;
      }
    }

    .input-prefix,
    .input-suffix {
      color: $_placeholder-color;
      flex: none;
      padding: 0 0.2em;
    }
    .input-prefix {
      margin-right: 0.2em;
    }
    .input-suffix {
      margin-left: 0.2em;
    }

    .input-icon {
      font-size: 1.2em;
      opacity: 0.4;
    }

    .char-limiting {
      align-items: center;
      color: $_placeholder-color;
      display: flex;
      font-size: 0.9em;
      justify-content: center;
      padding: 0 0.2em;
      pointer-events: none;
    }
  }

  &:hover {
    color: map-get($_color, hover);

    .tc-input-wrap {
      background-color: map-get($_bg, hover);
      border-color: map-get($_border, hover);
      box-shadow: $_shadow-hover;
    }
  }

  &.input-focus {
    color: map-get($_color, focus);

    .tc-input-wrap {
      background-color: map-get($_bg, focus);
      border-color: map-get($_border, focus);
      box-shadow: $_shadow-hover;
    }
  }

  &.ng-invalid.ng-touched,
  .has-error & {
    .tc-input-wrap {
      background-color: rgba($error-color, 0.1);
      border: 1px solid $error-color;
    }
  }

  &.input-sm {
    border-radius: $_shape-sm;
    font-size: $_fs-sm;
    line-height: $_lh-sm;

    .tc-input-wrap {
      .input-control {
        padding-top: $_padding-v-sm;
        padding-bottom: $_padding-v-sm;
      }

      .input-icon {
        font-size: 1.1em;
      }
    }
  }

  &.input-lg {
    border-radius: $_shape-lg;
    font-size: $_fs-lg;
    line-height: $_lh-lg;

    .tc-input-wrap {
      .input-control {
        padding-top: $_padding-v-lg;
        padding-bottom: $_padding-v-lg;
      }
    }
  }

  &.input-disabled,
  &.input-readonly {
    color: map-get($_color, disabled);

    .tc-input-wrap {
      background-color: map-get($_bg, disabled);
      border-color: map-get($_border, disabled);
      box-shadow: none !important;
      cursor: not-allowed;

      .input-control {
        pointer-events: none;
      }
    }
  }
}
